@model Webserver.Models.ViewModels.Pagination.PagerViewModel<Models.University, Webserver.Enums.UniversitySortOrder>

@{
    ViewBag.Title = "Universities";
}

<h2>Search for universities: </h2>

@using (Html.BeginForm("Index", "Universities", new { page = Model.Pager.CurrentPage, sortOrder = Model.SortOrder }, FormMethod.Get))
{
    <span>@Html.TextBox("searchCriteria", Session["UniversitySearchCriteria"]?.ToString(), new { id = "txtbox" })</span>
    <span><input type="submit" value="Search" /></span>
    <span>@Html.DropDownList("country", new SelectList(Webserver.Helpers.CountryStore.CountryNames), "Select Country", new { id = "dropdwn" })</span>
}

<div class="tab-content">
    <table class="table">
        <tr>
            <th>
                @if (Model.SortOrder == Webserver.Enums.UniversitySortOrder.NAME_ASC)
                {
                    @Html.ActionLink("Name", "Index",
                        new { page = Model.Pager.CurrentPage, searchCriteria = ViewBag.SearchCriteria, sortOrder = Webserver.Enums.UniversitySortOrder.NAME_DESC, ViewBag.Country })
                }
                else
                {
                    @Html.ActionLink("Name", "Index",
                        new { page = Model.Pager.CurrentPage, searchCriteria = ViewBag.SearchCriteria, sortOrder = Webserver.Enums.UniversitySortOrder.NAME_ASC, ViewBag.Country })
                }
            </th>
            <th>
                @if (Model.SortOrder == Webserver.Enums.UniversitySortOrder.CITY_ASC)
                {
                    @Html.ActionLink("City", "Index",
                        new { page = Model.Pager.CurrentPage, searchCriteria = ViewBag.SearchCriteria, sortOrder = Webserver.Enums.UniversitySortOrder.CITY_DESC, ViewBag.Country })
                }
                else
                {
                    @Html.ActionLink("City", "Index",
                        new { page = Model.Pager.CurrentPage, searchCriteria = ViewBag.SearchCriteria, sortOrder = Webserver.Enums.UniversitySortOrder.CITY_ASC, ViewBag.Country })
                }
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.LastOrDefault().Description)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                </td>
            </tr>
        }
    </table>
</div>

@if (Model.Pager.EndPage > 1)
{
    <ul class="pagination">
        @if (Model.Pager.CurrentPage > 1)
        {
            <li>
                @Html.ActionLink("First", "Index", new { searchCriteria = ViewBag.SearchCriteria, sortOrder = Model.SortOrder, ViewBag.Country })
            </li>
            <li>
                @Html.ActionLink("Previous", "Index", new { page = Model.Pager.CurrentPage - 1, searchCriteria = ViewBag.SearchCriteria, sortOrder = Model.SortOrder, ViewBag.Country })
            </li>
        }

        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
        {
            <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                @Html.ActionLink(page.ToString(), "Index", new { page = page, searchCriteria = ViewBag.SearchCriteria, sortOrder = Model.SortOrder, ViewBag.Country })
            </li>
        }

        @if (Model.Pager.CurrentPage < Model.Pager.TotalPageCount)
        {
            <li>
                @Html.ActionLink("Next", "Index", new { page = Model.Pager.CurrentPage + 1, searchCriteria = ViewBag.SearchCriteria, sortOrder = Model.SortOrder, ViewBag.Country })
            </li>
            <li>
                @Html.ActionLink("Last", "Index", new { page = Model.Pager.TotalPageCount, searchCriteria = ViewBag.SearchCriteria, sortOrder = Model.SortOrder, ViewBag.Country })
            </li>
        }
    </ul>
}

@if (Request.IsAuthenticated)
{
    if (User.IsInRole("Administrator"))
    {
        <p>
            @Html.ActionLink("Add", "Add")
        </p>
    }
}