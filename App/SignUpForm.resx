<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sgAAAABJRU5ErkJggg==
</value>
  </data>
</root>