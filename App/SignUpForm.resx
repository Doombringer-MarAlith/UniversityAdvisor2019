<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>